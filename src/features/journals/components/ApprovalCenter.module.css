/* src/features/journals/components/ApprovalCenter.module.css */

.approvalCenterContainer {
  background: var(--bg-card);
  border: 2px solid var(--accent-warm);
  border-radius: var(--border-radius-md);
  margin: calc(var(--spacing-unit) * 2) 0;
  padding: 0;
  overflow: hidden;
  box-shadow: 0 4px 12px var(--shadow-color);
}

.approvalCenterHeader {
  background: var(--bg-secondary);
  color: var(--text-primary);
  padding: calc(var(--spacing-unit) * 2) calc(var(--spacing-unit) * 3);
  border-bottom: 1px solid var(--border-subtle);
}

.headerLeft {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: calc(var(--spacing-unit) * 2);
}

.approvalCenterTitle {
  margin: 0;
  font-size: 1.2rem;
  font-weight: 600;
  display: flex;
  align-items: center;
  gap: calc(var(--spacing-unit) * 1);
  letter-spacing: 0.5px;
}

.titleIcon {
  font-size: 1.3rem;
  color: var(--accent-warm);
}

.closeButton {
  background: var(--bg-card);
  border: 1px solid var(--border-subtle);
  color: var(--text-secondary);
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.3rem;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.2s;
  touch-action: manipulation;
}

.closeButton:hover {
  background: var(--bg-secondary-hover);
  border-color: var(--accent-warm);
  color: var(--accent-warm);
}

.entityFilterRow {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  margin-bottom: calc(var(--spacing-unit) * 1.5);
  /* Add padding to prevent focus outline from being clipped */
  padding: 4px;
  overflow: visible;
}

.filterSwiper {
  width: 100%;
  overflow: visible;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  /* Remove container background and border - each button will have its own */
  padding: calc(var(--spacing-unit) * 0.5);
}

/* Ensure swiper wrapper doesn't clip focus outlines */
.filterSwiper :global(.swiper-wrapper) {
  overflow: visible;
  align-items: center;
  display: flex;
}

.filterSwiper :global(.swiper-slide) {
  overflow: visible;
  display: flex;
  align-items: center;
}

.filterSlide {
  width: auto !important;
  flex-shrink: 0;
  display: flex !important;
  align-items: center;
  height: auto;
}

.filterLabel {
  font-size: 0.875rem;
  font-weight: 500;
  opacity: 0.9;
}

/* Individual button styling with own border */
.entityFilterButton {
  padding: calc(var(--spacing-unit) * 0.5 + 4px) calc(var(--spacing-unit) * 1 + 4px);
  border: 1px solid rgba(255, 255, 255, 0.15);
  background-color: var(--bg-secondary);
  color: var(--text-secondary);
  border-radius: var(--border-radius-md);
  cursor: pointer;
  font-size: 0.85em;
  transition: all 0.2s ease;
  position: relative;
  display: flex;
  align-items: center;
  gap: 6px;
  white-space: nowrap;
  flex-shrink: 0;
  touch-action: manipulation;
  outline: none;
  box-shadow: none;
  vertical-align: baseline;
  line-height: 1;
  /* Ensure consistent size regardless of badge presence */
  min-width: fit-content;
  min-height: calc(var(--spacing-unit) * 2 + 8px + 1.2em);
}

.entityFilterButton:focus-visible {
  outline: 2px solid var(--accent-warm);
  outline-offset: 2px;
  z-index: 10;
  position: relative;
  /* Ensure each button gets its own individual outline */
  isolation: isolate;
}

.entityFilterButton:hover:not(.entityFilterButtonActive) {
  color: var(--text-primary);
  border-color: var(--accent-warm);
}

.entityFilterButtonActive {
  background-color: var(--accent-warm);
  color: var(--bg-card);
  font-weight: 600;
  box-shadow: 0 1px 3px var(--shadow-color);
  transform: scale(1.02);
}

.filterBadge {
  background: var(--accent-warm);
  color: white;
  font-size: 0.75rem;
  font-weight: 600;
  padding: calc(var(--spacing-unit) * 0.25) calc(var(--spacing-unit) * 0.5);
  border-radius: 12px;
  min-width: 1.25rem;
  height: 1.25rem;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-left: calc(var(--spacing-unit) * 0.25);
}

.approvalCenterContent {
  padding: calc(var(--spacing-unit) * 3);
  min-height: 350px;
  max-height: 650px;
  overflow-y: auto;
}

.journalScopeInfo {
  color: var(--text-primary);
  padding: calc(var(--spacing-unit) * 2) calc(var(--spacing-unit) * 2.5);
  border-radius: var(--border-radius-md);
  margin-bottom: calc(var(--spacing-unit) * 2.5);
  font-size: 0.9rem;
  border: 1px solid var(--accent-warm);
  font-weight: 400;
  background: var(--bg-secondary);
}

.loadingState,
.errorState,
.emptyState {
  text-align: center;
  padding: calc(var(--spacing-unit) * 4);
  color: var(--text-secondary);
  font-style: italic;
  font-size: 1rem;
}

.loadingState {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: calc(var(--spacing-unit) * 2);
}

.loadingSpinner {
  font-size: 1.8rem;
  color: var(--accent-warm);
}

.errorState {
  color: var(--danger-color);
  background: var(--danger-color-light-bg);
  border-radius: var(--border-radius-md);
  border: 1px solid var(--danger-color-hover);
}

.emptyState {
  color: var(--text-secondary);
}

.pendingItemsList {
  display: flex;
  flex-direction: column;
  gap: calc(var(--spacing-unit) * 2);
}

.pendingEntityCard {
  background: var(--bg-card);
  border: 1px solid var(--border-subtle);
  border-radius: var(--border-radius-md);
  padding: calc(var(--spacing-unit) * 3);
  display: flex;
  flex-direction: column;
  gap: calc(var(--spacing-unit) * 2);
  transition: all 0.2s ease;
  box-shadow: 0 2px 4px var(--shadow-color);
}

.pendingEntityCard:hover {
  border-color: var(--border-hover);
  box-shadow: 0 4px 6px var(--shadow-color);
}

.entityInfo {
  flex: 1;
}

.entityHeader {
  display: flex;
  align-items: center;
  gap: calc(var(--spacing-unit) * 1.5);
  margin-bottom: calc(var(--spacing-unit) * 1.5);
  flex-wrap: wrap;
}

.entityName {
  font-weight: 600;
  color: var(--text-primary);
  font-size: 1rem;
  line-height: 1.4;
  word-break: break-word;
}

.statusBadgePendingRoot {
  background: #fbbf24;
  color: white;
  padding: calc(var(--spacing-unit) * 0.75) calc(var(--spacing-unit) * 1.5);
  border-radius: var(--border-radius-sm);
  font-size: 0.75rem;
  font-weight: 600;
  letter-spacing: 0.5px;
  white-space: nowrap;
}

.statusBadgePendingLevel {
  background: #f59e0b;
  color: white;
  padding: calc(var(--spacing-unit) * 0.75) calc(var(--spacing-unit) * 1.5);
  border-radius: var(--border-radius-sm);
  font-size: 0.75rem;
  font-weight: 600;
  letter-spacing: 0.5px;
  white-space: nowrap;
}

.statusBadgePendingFinal {
  background: #10b981;
  color: white;
  padding: calc(var(--spacing-unit) * 0.75) calc(var(--spacing-unit) * 1.5);
  border-radius: var(--border-radius-sm);
  font-size: 0.75rem;
  font-weight: 600;
  letter-spacing: 0.5px;
  white-space: nowrap;
}

.entityMeta {
  display: flex;
  align-items: center;
  gap: calc(var(--spacing-unit) * 2);
  margin-bottom: calc(var(--spacing-unit) * 1.5);
  flex-wrap: wrap;
}

.entityType {
  background: var(--bg-secondary);
  color: var(--text-secondary);
  border-radius: var(--border-radius-sm);
  font-size: 0.75rem;
  font-weight: 500;
  border: 1px solid var(--border-subtle);
}

.entityDate {
  color: var(--text-secondary);
  font-size: 0.8rem;
}


.entityActions {
  display: flex;
  align-items: center;
  gap: calc(var(--spacing-unit) * 2);
  border-top: 1px solid var(--border-subtle);
}

.approveButton {
  background: var(--accent-warm);
  color: white;
  border: 1px solid var(--accent-warm);
  padding: calc(var(--spacing-unit) * 2) calc(var(--spacing-unit) * 2.5);
  border-radius: var(--border-radius-md);
  display: flex;
  align-items: center;
  justify-content: center;
  gap: calc(var(--spacing-unit) * 1);
  font-weight: 600;
  font-size: 0.9rem;
  cursor: pointer;
  transition: all 0.2s ease;
  letter-spacing: 0.5px;
  touch-action: manipulation;
  min-height: 44px;
  flex: 1;
}

.approveButton:hover {
  background: var(--accent-warm-hover);
  border-color: var(--accent-warm-hover);
  transform: translateY(-1px);
  box-shadow: 0 6px 20px var(--shadow-color);
}

.approveButton:active {
  transform: translateY(0);
}

.viewOnlyLabel {
  color: var(--text-secondary);
  font-size: 0.8rem;
  font-weight: 500;
  padding: calc(var(--spacing-unit) * 2) calc(var(--spacing-unit) * 2.5);
  background: var(--bg-disabled);
  border-radius: var(--border-radius-md);
  letter-spacing: 0.5px;
  border: 1px solid var(--border-subtle);
  min-height: 44px;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  flex: 1;
}

/* Mobile-first responsive adjustments */
@media (max-width: 768px) {
  .approvalCenterHeader {
    padding: calc(var(--spacing-unit) * 2);
  }
  
  .headerLeft {
    margin-bottom: calc(var(--spacing-unit) * 1.5);
  }
  
  .approvalCenterTitle {
    font-size: 1.1rem;
  }
  
  .slidingToggleTrack {
    width: 240px;
    height: 40px;
  }
  
  .toggleLabel {
    font-size: 0.8em;
    gap: 4px;
  }
  
  .toggleIcon {
    font-size: 0.85rem;
  }
  
  .entityFilterRow {
    /* Keep the same layout as desktop to match Journal slider */
  }
  
  .entityFilterButton {
    /* Keep the same sizing with extra padding - no mobile overrides */
    padding: calc(var(--spacing-unit) * 0.5 + 4px) calc(var(--spacing-unit) * 1 + 4px);
    font-size: 0.85em;
  }
  
  .approvalCenterContent {
    padding: calc(var(--spacing-unit) * 2);
    min-height: 300px;
    max-height: 500px;
  }
  
  .pendingEntityCard {
    padding: calc(var(--spacing-unit) * 2.5);
  }
  
  .entityActions {
    gap: calc(var(--spacing-unit) * 1.5);
    flex-direction: column;
  }
  
  .viewDetailsButton,
  .approveButton,
  .viewOnlyLabel {
    width: 100%;
  }
}

/* Sliding Toggle Styles */
.journalScopeToggle {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  margin-bottom: calc(var(--spacing-unit) * 2);
  padding: 4px;
  overflow: visible;
}

.slidingToggleContainer {
  position: relative;
}

.slidingToggleTrack {
  position: relative;
  width: 280px;
  height: 44px;
  background-color: var(--bg-secondary);
  border: 1px solid rgba(255, 255, 255, 0.15);
  border-radius: 22px;
  cursor: pointer;
  overflow: hidden;
  touch-action: manipulation;
  outline: none;
  -webkit-tap-highlight-color: transparent;
}

.slidingToggleTrack:focus {
  outline: none;
}

.slidingToggleIndicator {
  position: absolute;
  top: 2px;
  left: 2px;
  width: calc(50% - 2px);
  height: calc(100% - 4px);
  background-color: var(--accent-warm);
  border-radius: 20px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
  z-index: 1;
}

.slidingToggleLabels {
  position: relative;
  display: flex;
  width: 100%;
  height: 100%;
  z-index: 2;
}

.toggleLabel {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 6px;
  font-size: 0.85em;
  font-weight: 500;
  color: var(--text-secondary);
  transition: all 0.3s cubic-bezier(0.25, 0.1, 0.25, 1);
  position: relative;
  z-index: 2;
  pointer-events: none;
  user-select: none;
}

.toggleLabel span {
  font-weight: inherit;
  transition: inherit;
}

.toggleLabel .toggleIcon {
  transition: inherit;
}

.toggleLabelActive {
  color: var(--bg-card) !important;
  font-weight: 600;
}

.toggleIcon {
  font-size: 0.9rem;
  flex-shrink: 0;
}


/* Link Entity Styles */
.linkEntityCard {
  border-left: 4px solid #8b5cf6;
  padding: calc(var(--spacing-unit) * 2.5) !important;
}

.linkEntityDisplay {
  display: flex;
  flex-direction: column;
  gap: calc(var(--spacing-unit) * 2);
  width: 100%;
}

.linkHeader {
  display: flex;
  align-items: center;
  gap: calc(var(--spacing-unit) * 1.5);
  flex-wrap: wrap;
}

.linkIcon {
  color: #8b5cf6;
  font-size: 1.4rem;
  flex-shrink: 0;
}

.linkTitle {
  font-weight: 600;
  color: var(--text-primary);
  font-size: 1rem;
}

.linkComponents {
  display: flex;
  align-items: center;
  gap: calc(var(--spacing-unit) * 2);
  padding: calc(var(--spacing-unit) * 2.5);
  background: var(--bg-secondary);
  border-radius: var(--border-radius-md);
  border: 1px solid var(--border-subtle);
  flex-wrap: wrap;
}

.linkComponent {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: calc(var(--spacing-unit) * 0.75);
  min-width: 120px;
  flex: 1;
  text-align: center;
}

.componentLabel {
  font-size: 0.75rem;
  font-weight: 500;
  color: var(--text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.componentValue {
  font-size: 0.9rem;
  font-weight: 600;
  color: var(--text-primary);
  text-align: center;
  word-break: break-word;
  line-height: 1.3;
}

.linkArrow {
  color: #8b5cf6;
  font-size: 1.4rem;
  font-weight: bold;
  flex-shrink: 0;
}

/* View Details Button */
.viewDetailsButton {
  background: var(--bg-secondary);
  color: var(--text-primary);
  border: 1px solid var(--border-subtle);
  padding: calc(var(--spacing-unit) * 2) calc(var(--spacing-unit) * 2.5);
  border-radius: var(--border-radius-md);
  display: flex;
  align-items: center;
  justify-content: center;
  gap: calc(var(--spacing-unit) * 1);
  font-weight: 500;
  font-size: 0.9rem;
  cursor: pointer;
  transition: all 0.2s ease;
  letter-spacing: 0.5px;
  touch-action: manipulation;
  min-height: 44px;
  flex: 1;
}

.viewDetailsButton:hover {
  background: var(--bg-secondary-hover);
  border-color: var(--accent-warm);
  color: var(--accent-warm);
  transform: translateY(-1px);
}

.entityActions {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

/* Mobile responsive adjustments for new components */
@media (max-width: 768px) {
  .linkComponents {
    flex-direction: column;
    gap: calc(var(--spacing-unit) * 2);
    padding: calc(var(--spacing-unit) * 2);
  }
  
  .linkComponent {
    min-width: auto;
    width: 100%;
  }
  
  .linkArrow {
    transform: rotate(90deg);
  }
}

/* Entity Detail Modal Styles */
.entityDetailGrid {
  display: grid;
  grid-template-columns: 1fr;
  gap: calc(var(--spacing-unit) * 2);
}

.entityDetailItem {
  display: grid;
  grid-template-columns: 140px 1fr;
  gap: calc(var(--spacing-unit) * 1.5);
  align-items: start;
  padding: calc(var(--spacing-unit) * 1.5);
  background: var(--bg-secondary);
  border-radius: var(--border-radius-sm);
  border: 1px solid var(--border-subtle);
}

.entityDetailItem label {
  font-weight: 600;
  color: var(--text-secondary);
  font-size: 0.9rem;
  margin: 0;
}

.entityDetailItem span {
  color: var(--text-primary);
  font-size: 0.9rem;
  word-break: break-word;
}

.canApproveYes {
  color: var(--success-color, #10b981);
  font-weight: 600;
}

.canApproveNo {
  color: var(--danger-color, #ef4444);
  font-weight: 600;
}

.additionalInfoGrid {
  display: grid;
  gap: calc(var(--spacing-unit) * 1);
  margin-top: calc(var(--spacing-unit) * 1);
}

.additionalInfoItem {
  display: flex;
  align-items: center;
  gap: calc(var(--spacing-unit) * 1);
  padding: calc(var(--spacing-unit) * 1) calc(var(--spacing-unit) * 1.5);
  background: var(--bg-card);
  border-radius: var(--border-radius-sm);
  border: 1px solid var(--border-subtle);
}

.infoKey {
  font-weight: 500;
  color: var(--text-secondary);
  font-size: 0.85rem;
  min-width: 100px;
}

.infoValue {
  color: var(--text-primary);
  font-size: 0.85rem;
  word-break: break-word;
}

/* Mobile responsive adjustments for modal */
@media (max-width: 768px) {
  .entityDetailItem {
    grid-template-columns: 1fr;
    gap: calc(var(--spacing-unit) * 0.75);
  }
  
  .entityDetailItem label {
    font-size: 0.8rem;
  }
  
  .entityDetailItem span {
    font-size: 0.85rem;
  }
  
  .additionalInfoItem {
    flex-direction: column;
    align-items: flex-start;
    gap: calc(var(--spacing-unit) * 0.5);
  }
  
  .infoKey {
    min-width: auto;
    font-size: 0.8rem;
  }
  
  .infoValue {
    font-size: 0.8rem;
  }
}