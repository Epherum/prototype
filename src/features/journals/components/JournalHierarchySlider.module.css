/* src/features/journals/components/JournalHierarchySlider.module.css */

/* Slider header with help button */
.sliderHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: calc(var(--spacing-unit) * 0.75);
  padding: 0 calc(var(--spacing-unit) * 0.5);
}

.sliderTitle {
  margin: 0;
  font-size: 1.1rem;
  font-weight: 600;
  color: var(--text-primary);
}


/* ... (all existing styles from .headerFilterRow down to .rootFilterControls button.activeFilter) ... */
.headerFilterRow {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  margin-bottom: calc(var(--spacing-unit) * 1.5);
  position: relative;
}
.rootFilterControls {
  display: inline-flex;
  align-items: center;
  gap: var(--spacing-unit);
  background-color: var(--bg-secondary);
  padding: calc(var(--spacing-unit) * 0.5);
  border-radius: var(--border-radius-md);
  border: 1px solid rgba(255, 255, 255, 0.15);
}
.rootFilterControls button {
  padding: calc(var(--spacing-unit) * 0.5) var(--spacing-unit);
  border: none;
  background-color: transparent;
  color: var(--text-secondary);
  border-radius: var(--border-radius-sm);
  cursor: pointer;
  font-size: 0.85em;
  transition: all 0.2s ease;
}
.rootFilterControls button:hover:not(.activeFilter) {
  color: var(--text-primary);
}
.rootFilterControls button {
  position: relative;
  display: flex;
  align-items: center;
  gap: 6px;
}

.rootFilterControls button.activeFilter {
  background-color: var(--accent-warm);
  color: var(--bg-card);
  font-weight: 600;
  box-shadow: 0 1px 3px var(--shadow-color);
  position: relative;
}


/* Subtle animation for better feedback */
.rootFilterControls button.activeFilter {
  transform: scale(1.02);
}

/* Container glow when any filter is active - covers all combinations of 1+ active filters */
.rootFilterControls:has(button.activeFilter) {
  /* border-color: var(--accent-warm); */
  /* CHECK HERE */
}

/* Filter color dots */
.filterDot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  display: inline-block;
}

/* Make dot colors more specific to override button color inheritance */
.rootFilterControls button .filterDotAffected {
  background-color: #4ade80 !important; /* Green */
}

.rootFilterControls button .filterDotUnaffected {
  background-color: #f97316 !important; /* Orange */
}

.rootFilterControls button .filterDotInProcess {
  background-color: #3b82f6 !important; /* Blue */
}

/* Ensure dots maintain their colors even when button is active */
.rootFilterControls button.activeFilter .filterDotAffected {
  background-color: #4ade80 !important; /* Green */
}

.rootFilterControls button.activeFilter .filterDotUnaffected {
  background-color: #f97316 !important; /* Orange */
}

.rootFilterControls button.activeFilter .filterDotInProcess {
  background-color: #3b82f6 !important; /* Blue */
}

/* --- L2 and L3 Scroller / Container Styles --- */

.level2ScrollerTitle {
  font-size: 0.9em;
  color: var(--text-secondary);
  font-weight: 500;
  text-align: center;
  margin-top: calc(var(--spacing-unit) * 1.5);
  margin-bottom: calc(var(--spacing-unit) * 0.75);
}

.wrappingItemContainer {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
  gap: 8px;
  padding: var(--spacing-unit);
  width: 100%;
  box-sizing: border-box;
  border-radius: var(--border-radius-md);
  margin-bottom: calc(var(--spacing-unit) * 1.5);
  transition: background-color 0.3s ease;
}

.level2WrappingContainer {
  background-color: var(--bg-secondary);
  padding: calc(var(--spacing-unit) * 1.5);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.level3WrappingContainer {
  background-color: var(--bg-secondary);
  padding: calc(var(--spacing-unit) * 1.5);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

/* ... (all remaining styles from .l2ButtonInteractiveWrapper to .noDataSmall are unchanged) ... */
.l2ButtonInteractiveWrapper {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--border-radius-pill);
}
.level2Button {
  padding: calc(var(--spacing-unit) * 0.65) calc(var(--spacing-unit) * 1.25);
  font-size: 0.8em;
  font-weight: 500;
  cursor: pointer;
  border: 2px solid var(--border-color, var(--text-secondary));
  border-radius: var(--border-radius-pill);
  background-color: var(--bg-secondary);
  color: var(--text-secondary);
  transition: background-color 0.2s ease, color 0.2s ease,
    border-color 0.2s ease, outline-color 0.2s ease;
  white-space: nowrap;
  min-width: 50px;
  text-align: center;
  position: relative;
  z-index: 5;
  box-sizing: border-box;
  outline: none;
  -webkit-tap-highlight-color: transparent; /* For mobile tap highlight */
}
@media (hover: hover) {
  .level2Button:hover:not(.level2ButtonActive) {
    border-color: var(--accent-warm-light);
    background-color: var(--accent-slider);
  }
}
.level2ButtonActive,
.level2ButtonActive:hover {
  background-color: var(--accent-warm);
  color: var(--bg-card);
  border-color: var(--accent-warm);
  font-weight: 600;
}
.level2Button.colored.level2ButtonActive,
.level2Button.colored.level2ButtonActive:hover {
  background-color: var(--item-color);
  border-color: var(--item-color);
  color: #333;
  font-weight: 600;
}

.level2Button.level2ButtonActive:not(.terminalNode) {
  border-color: var(--accent-warm);
  box-shadow: inset 0 0 0 2px var(--bg-card);
}
.level2Button.colored.level2ButtonActive:not(.terminalNode) {
  border-color: var(--item-color);
  box-shadow: inset 0 0 0 2px var(--bg-card);
}
.filterInfoRow {
  text-align: center;
  font-size: 0.75rem;
  color: var(--text-secondary);
  font-family: monospace;
  padding-bottom: calc(var(--spacing-unit) * 0.5);
  margin-top: calc(var(--spacing-unit) * -0.5);
  min-height: 1rem;
  overflow-wrap: break-word;
}
.terminalNode {
  border-style: dotted;
  border-width: 2px;
  border-color: var(--border-color, var(--text-secondary));
}
.terminalNode.level2ButtonActive {
  border-color: var(--accent-warm);
  box-shadow: inset 0 0 0 2px var(--bg-card);
}
.terminalNode.colored.level2ButtonActive {
  border-color: var(--item-color);
  box-shadow: inset 0 0 0 2px var(--bg-card);
}
.filterInfoNone {
  font-style: italic;
  opacity: 0.7;
  font-family: var(--font-sans);
}
.noDataSmall {
  width: 100%;
  height: 65px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.hierarchyContentWrapper {
  position: relative;
  /* Set a min-height to prevent the page from jumping during state transitions */
  min-height: 220px;
  width: 100%;
}

.stateOverlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  font-size: 0.9em;
  color: var(--text-secondary);
  background-color: var(--bg-card);
  border: 1px dashed var(--border-subtle);
  border-radius: var(--border-radius-lg);
  padding: var(--spacing-unit);
  box-sizing: border-box;
}

.errorState {
  color: var(--accent-danger);
  border-color: var(--accent-danger-light);
}
