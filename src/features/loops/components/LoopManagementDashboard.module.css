/* src/features/loops/components/LoopManagementDashboard.module.css */

.dashboard {
  padding: calc(var(--spacing-unit) * 2);
  max-width: 1200px;
  margin: 0 auto;
}

/* Header */
.header {
  display: flex;
  align-items: flex-end;
  justify-content: space-between;
  margin-bottom: calc(var(--spacing-unit) * 3);
  gap: calc(var(--spacing-unit) * 2);
}

.headerLeft {
  display: flex;
  align-items: flex-start;
  gap: calc(var(--spacing-unit) * 1.5);
  flex: 1;
}

.backButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 44px;
  height: 44px;
  background-color: var(--bg-secondary);
  border: 1px solid var(--border-subtle);
  border-radius: var(--border-radius-md);
  color: var(--text-secondary);
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 1.2em;
  flex-shrink: 0;
  margin-top: calc(var(--spacing-unit) * 0.5);
}

.backButton:hover {
  background-color: var(--accent-slider);
  border-color: var(--accent-warm-light);
  color: var(--text-primary);
  transform: translateX(-2px);
}

.headerContent {
  flex: 1;
}

.title {
  margin: 0 0 calc(var(--spacing-unit) * 0.5) 0;
  font-size: 1.8em;
  font-weight: 700;
  color: var(--text-primary);
}

.subtitle {
  margin: 0;
  font-size: 1em;
  color: var(--text-secondary);
  line-height: 1.5;
}

.createButton {
  display: flex;
  align-items: center;
  gap: calc(var(--spacing-unit) * 0.75);
  padding: calc(var(--spacing-unit) * 1) calc(var(--spacing-unit) * 2);
  background-color: var(--accent-warm);
  color: white;
  border: none;
  border-radius: var(--border-radius-md);
  font-size: 0.95em;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: 0 2px 4px var(--shadow-color);
  white-space: nowrap;
}

.createButton:hover:not(:disabled) {
  background-color: var(--accent-warm-hover);
  transform: translateY(-1px);
  box-shadow: 0 4px 8px var(--shadow-color);
}

.createButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

.createButton svg {
  font-size: 1.2em;
}

/* Controls */
.controls {
  display: flex;
  align-items: center;
  gap: calc(var(--spacing-unit) * 1.5);
  margin-bottom: calc(var(--spacing-unit) * 2);
  flex-wrap: wrap;
}

.searchContainer {
  position: relative;
  flex: 1;
  min-width: 250px;
}

.searchIcon {
  position: absolute;
  left: calc(var(--spacing-unit) * 1);
  top: 50%;
  transform: translateY(-50%);
  color: var(--text-secondary);
  font-size: 1.1em;
}

.searchInput {
  width: 100%;
  padding: calc(var(--spacing-unit) * 0.75) calc(var(--spacing-unit) * 0.75) calc(var(--spacing-unit) * 0.75) calc(var(--spacing-unit) * 3);
  border: 1px solid var(--border-subtle);
  border-radius: var(--border-radius-md);
  background-color: var(--bg-secondary);
  color: var(--text-primary);
  font-size: 0.9em;
  transition: all 0.2s ease;
}

.searchInput:focus {
  outline: none;
  border-color: var(--accent-warm);
  box-shadow: 0 0 0 2px rgba(232, 159, 113, 0.2);
}

.filterContainer,
.sortContainer {
  display: flex;
  align-items: center;
  gap: calc(var(--spacing-unit) * 0.5);
}

.filterIcon {
  color: var(--text-secondary);
  font-size: 1.1em;
}

.filterSelect,
.sortSelect {
  padding: calc(var(--spacing-unit) * 0.75) calc(var(--spacing-unit) * 1);
  border: 1px solid var(--border-subtle);
  border-radius: var(--border-radius-md);
  background-color: var(--bg-secondary);
  color: var(--text-primary);
  font-size: 0.9em;
  cursor: pointer;
  transition: border-color 0.2s ease;
}

.filterSelect:focus,
.sortSelect:focus {
  outline: none;
  border-color: var(--accent-warm);
}

/* Loops Grid */
.loopsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
  gap: calc(var(--spacing-unit) * 2);
  min-height: 200px;
}

/* Loop Cards */
.loopCard {
  background-color: var(--bg-card);
  border: 1px solid var(--border-subtle);
  border-radius: var(--border-radius-lg);
  padding: calc(var(--spacing-unit) * 2);
  box-shadow: 0 2px 4px var(--shadow-color);
  transition: all 0.2s ease;
  display: flex;
  flex-direction: column;
  gap: calc(var(--spacing-unit) * 1.5);
}

.loopCard:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px var(--shadow-color);
  border-color: var(--accent-warm-light);
}

.cardHeader {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
  gap: calc(var(--spacing-unit) * 1);
}

.cardHeaderLeft {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: calc(var(--spacing-unit) * 0.5);
}

.loopName {
  margin: 0;
  font-size: 1.2em;
  font-weight: 600;
  color: var(--text-primary);
  line-height: 1.3;
  word-break: break-word;
}

.statusBadge {
  display: inline-block;
  padding: calc(var(--spacing-unit) * 0.25) calc(var(--spacing-unit) * 0.75);
  border-radius: var(--border-radius-pill);
  font-size: 0.75em;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  width: fit-content;
}

.statusBadgeActive {
  background-color: rgba(34, 197, 94, 0.2);
  color: #22c55e;
}

.statusBadgeInactive {
  background-color: rgba(156, 163, 175, 0.2);
  color: #9ca3af;
}

.statusBadgeDraft {
  background-color: rgba(59, 130, 246, 0.2);
  color: #3b82f6;
}

.statusBadgeDefault {
  background-color: var(--bg-secondary);
  color: var(--text-secondary);
}

.cardActions {
  display: flex;
  align-items: center;
  gap: calc(var(--spacing-unit) * 0.5);
  flex-shrink: 0;
}

.actionButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 32px;
  height: 32px;
  background-color: var(--bg-secondary);
  border: 1px solid var(--border-subtle);
  border-radius: var(--border-radius-sm);
  color: var(--text-secondary);
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 0.9em;
}

.actionButton:hover:not(:disabled) {
  background-color: var(--accent-slider);
  border-color: var(--accent-warm-light);
  color: var(--text-primary);
  transform: scale(1.05);
}

.actionButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
}

.actionButtonDanger:hover:not(:disabled) {
  background-color: #dc3545;
  border-color: #dc3545;
  color: white;
}

.cardBody {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: calc(var(--spacing-unit) * 1);
}

.loopVisualization {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 120px;
  background-color: var(--bg-secondary);
  border-radius: var(--border-radius-sm);
  border: 1px solid var(--border-subtle);
  overflow: hidden;
}

.cardVisualization {
  background-color: transparent;
  border: none;
  padding: calc(var(--spacing-unit) * 1);
  width: 100%;
  min-height: auto;
}

.loopDescription {
  font-size: 0.9em;
  color: var(--text-secondary);
  line-height: 1.5;
  font-style: italic;
}

.cardFooter {
  border-top: 1px solid var(--border-subtle);
  padding-top: calc(var(--spacing-unit) * 1);
}

.cardMeta {
  display: flex;
  align-items: center;
  gap: calc(var(--spacing-unit) * 1.5);
  flex-wrap: wrap;
}

.metaItem {
  font-size: 0.8em;
  color: var(--text-tertiary);
  display: flex;
  align-items: center;
  gap: calc(var(--spacing-unit) * 0.25);
}

/* States */
.errorContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 200px;
  color: var(--accent-danger);
  text-align: center;
}

.loadingState {
  grid-column: 1 / -1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: calc(var(--spacing-unit) * 2);
  min-height: 200px;
  color: var(--text-secondary);
}

.loadingSpinner {
  width: 32px;
  height: 32px;
  border: 3px solid var(--bg-secondary);
  border-top: 3px solid var(--accent-warm);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.emptyState {
  grid-column: 1 / -1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: calc(var(--spacing-unit) * 1.5);
  min-height: 300px;
  text-align: center;
  color: var(--text-secondary);
  padding: calc(var(--spacing-unit) * 3);
  border: 2px dashed var(--border-subtle);
  border-radius: var(--border-radius-lg);
  background-color: var(--bg-secondary);
}

.emptyIcon {
  font-size: 3em;
  color: var(--text-tertiary);
  opacity: 0.6;
}

.emptyState h3 {
  margin: 0;
  font-size: 1.3em;
  font-weight: 600;
  color: var(--text-primary);
}

.emptyState p {
  margin: 0;
  font-size: 1em;
  line-height: 1.5;
  max-width: 400px;
}

.emptyCreateButton {
  display: flex;
  align-items: center;
  gap: calc(var(--spacing-unit) * 0.75);
  padding: calc(var(--spacing-unit) * 1) calc(var(--spacing-unit) * 2);
  background-color: var(--accent-warm);
  color: white;
  border: none;
  border-radius: var(--border-radius-md);
  font-size: 0.95em;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  margin-top: calc(var(--spacing-unit) * 1);
}

.emptyCreateButton:hover {
  background-color: var(--accent-warm-hover);
  transform: translateY(-1px);
}

.emptyCreateButton svg {
  font-size: 1.2em;
}

/* Responsive Design */
@media (max-width: 768px) {
  .dashboard {
    padding: calc(var(--spacing-unit) * 1.5);
  }

  .header {
    flex-direction: column;
    align-items: stretch;
    gap: calc(var(--spacing-unit) * 1.5);
  }

  .headerLeft {
    flex-direction: row;
    align-items: flex-start;
    gap: calc(var(--spacing-unit) * 1);
  }

  .backButton {
    width: 40px;
    height: 40px;
    font-size: 1.1em;
  }

  .title {
    font-size: 1.5em;
  }

  .controls {
    flex-direction: column;
    align-items: stretch;
  }

  .searchContainer {
    min-width: auto;
  }

  .filterContainer,
  .sortContainer {
    justify-content: flex-start;
  }

  .loopsGrid {
    grid-template-columns: 1fr;
    gap: calc(var(--spacing-unit) * 1.5);
  }

  .cardHeader {
    flex-direction: column;
    align-items: stretch;
    gap: calc(var(--spacing-unit) * 1);
  }

  .cardActions {
    justify-content: flex-end;
  }

  .cardMeta {
    flex-direction: column;
    align-items: flex-start;
    gap: calc(var(--spacing-unit) * 0.5);
  }
}

@media (max-width: 480px) {
  .loopCard {
    padding: calc(var(--spacing-unit) * 1.5);
  }

  .cardActions {
    justify-content: space-between;
  }

  .actionButton {
    width: 36px;
    height: 36px;
  }
}