/* src/components/modals/CreateUserModal.module.css */

.createUserModalContent {
  width: 550px;
  max-height: 90vh;
  display: flex;
  flex-direction: column;
}

.createUserForm {
  display: flex;
  flex-direction: column;
  gap: calc(
    var(--spacing-unit) * 1.25
  ); /* 0.9rem is ~10px if 1rem=16px, so ~1.25 * 8px */
  padding: calc(var(--spacing-unit) * 0.5) calc(var(--spacing-unit) * 0.25);
  overflow-y: auto;
  flex-grow: 1;
  margin-bottom: var(
    --spacing-unit
  ); /* 1rem is often 16px, var(--spacing-unit) * 2 is 16px */
}

.formGroup {
  display: flex;
  flex-direction: column;
  gap: calc(var(--spacing-unit) * 0.5); /* 0.3rem is ~5px */
}

.formGroup label {
  font-size: 0.875em; /* Relative to parent */
  font-weight: 500;
  color: var(--text-secondary);
}

.formGroup input[type="text"],
.formGroup input[type="email"],
.formGroup input[type="password"],
.formGroup select {
  padding: calc(var(--spacing-unit) * 0.75) var(--spacing-unit); /* ~0.6rem & ~0.75rem */
  border: 1px solid var(--border-subtle);
  border-radius: var(--border-radius-md);
  font-size: 0.95em; /* Relative to parent */
  /* background-color: var(--bg-input, white); --bg-input not in your globals, default to var(--bg-card) or white */
  background-color: var(--bg-card);
  color: var(--text-primary);
  width: 100%;
  box-sizing: border-box;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
}

.formGroup input[type="text"]:focus,
.formGroup input[type="email"]:focus,
.formGroup input[type="password"]:focus,
.formGroup select:focus {
  outline: none;
  border-color: var(--accent-warm);
  box-shadow: 0 0 0 2px var(--accent-warm-light);
}

.formGroup input[type="text"]:disabled,
.formGroup input[type="email"]:disabled,
.formGroup input[type="password"]:disabled,
.formGroup select:disabled {
  /* --bg-disabled, --text-disabled, --border-disabled not in your globals.
     Using existing vars for a disabled look. */
  background-color: var(--bg-secondary); /* Lighter grey */
  color: var(--text-secondary); /* More muted text */
  cursor: not-allowed;
  border-color: var(--border-subtle);
  opacity: 0.7; /* Add opacity for disabled feel */
}

.passwordInputContainer {
  position: relative;
  display: flex;
  align-items: center;
}

.passwordInputContainer input[type="password"],
.passwordInputContainer input[type="text"] {
  padding-right: calc(var(--spacing-unit) * 3.5); /* ~2.5rem */
}

.passwordToggle {
  position: absolute;
  right: var(--spacing-unit); /* ~0.75rem */
  top: 50%;
  transform: translateY(-50%);
  background: none;
  border: none;
  cursor: pointer;
  color: var(--text-secondary);
  font-size: 1.2em; /* Relative to parent */
  padding: calc(var(--spacing-unit) * 0.25);
  display: flex;
  align-items: center;
  justify-content: center;
}

.roleAssignmentsSection {
  border-top: 1px solid var(--border-subtle);
  padding-top: var(--spacing-unit); /* ~0.8rem */
  margin-top: calc(var(--spacing-unit) * 0.5);
}

.roleAssignmentsSection h3 {
  font-size: 1em; /* Relative to parent, typically 16px */
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: calc(var(--spacing-unit) * 0.75); /* ~0.6rem */
}

.rolesSelect {
  min-height: calc(var(--spacing-unit) * 10); /* 80px */
  /* Inherits .formGroup select styles, so this is for height primarily */
}

.assignedRoleItem {
  border: 1px solid var(--border-subtle);
  border-radius: var(--border-radius-sm);
  padding: var(--spacing-unit); /* ~0.75rem */
  margin-bottom: var(--spacing-unit); /* ~0.75rem */
  background-color: var(--bg-secondary);
}

.assignedRoleHeader {
  font-weight: 500;
  margin-bottom: calc(var(--spacing-unit) * 0.5);
  color: var(--text-primary);
}

.errorMessage {
  /* --accent-danger not in your globals. Using --accent-warm for now, or you can hardcode red. */
  color: var(
    --accent-warm
  ); /* This will be orange, not ideal for errors but uses existing var */
  /* or color: #D32F2F; /* A generic red for errors */
  font-size: 0.875em;
  margin-top: calc(var(--spacing-unit) * 0.25);
  text-align: center;
}

.loadingSpinner {
  border: 4px solid var(--bg-secondary);
  border-top: 4px solid var(--accent-warm);
  border-radius: 50%; /* Or var(--border-radius-pill) if you want to use it */
  width: calc(var(--spacing-unit) * 3); /* 24px */
  height: calc(var(--spacing-unit) * 3); /* 24px */
  animation: spin 1s linear infinite;
  margin: calc(var(--spacing-unit) * 2) auto; /* ~1rem */
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* --- Button Styles --- */
/* Base style for these specific action buttons */
.actionButtonBase {
  padding: calc(var(--spacing-unit) * 1) calc(var(--spacing-unit) * 1.5);
  border: none;
  border-radius: var(--border-radius-sm); /* Updated to use global var */
  cursor: pointer;
  font-size: 0.9em;
  font-weight: 500; /* Added for better readability */
  transition: background-color 0.2s ease, color 0.2s ease, box-shadow 0.2s ease,
    opacity 0.2s ease;
  margin-top: var(--spacing-unit); /* Updated to use global var */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  text-decoration: none; /* Ensure no underlines */
}

/* For "Set Journal Restriction" and "Change" buttons */
.selectJournalButton,
.changeButton {
  background-color: var(--accent-warm);
  color: white; /* As requested, but BE AWARE of low contrast */
  /* To slightly improve perceived contrast of white on --accent-warm: */
  /* text-shadow: 0 0 1px rgba(0, 0, 0, 0.3); /* Subtle shadow behind text */
}

.selectJournalButton:hover,
.changeButton:hover {
  background-color: var(--accent-warm-light);
  /* color: var(--text-primary); Would be better for contrast on light bg */
  color: white; /* Sticking to white text requirement */
  box-shadow: 0 1px 3px var(--shadow-color);
}

/* For "Clear" button */
.clearButton {
  /* Styling for a "clear" or "secondary destructive" action using existing vars */
  background-color: var(--bg-card); /* White background */
  color: var(
    --text-secondary
  ); /* Using text-secondary for a less prominent "danger" feel */
  border: 1px solid var(--border-subtle); /* Subtle border */
}

.clearButton:hover {
  background-color: var(--bg-secondary); /* Light grey on hover */
  color: var(
    --accent-warm
  ); /* Use accent color for text on hover for a hint of "warning" */
  border-color: var(--accent-warm-light);
  box-shadow: 0 1px 3px var(--shadow-color);
}

/* Disabled state for all these buttons */
.selectJournalButton:disabled,
.changeButton:disabled,
.clearButton:disabled {
  background-color: var(--border-subtle);
  color: var(--text-secondary); /* Lighter text for disabled state */
  cursor: not-allowed;
  box-shadow: none;
  opacity: 0.6;
  border: none; /* Ensure no border for consistency on disabled */
}
/* If .clearButton has a border in normal state, specify disabled border too */
.clearButton:disabled {
  border: 1px solid var(--border-subtle);
}

.restrictionDisplay {
  display: flex;
  align-items: center;
  gap: var(--spacing-unit); /* Use global var */
  margin-top: var(--spacing-unit);
  padding: var(--spacing-unit);
  /* --background-alt not in your globals, using --bg-secondary */
  background-color: var(--bg-secondary);
  border-radius: var(--border-radius-sm); /* Use global var */
  border: 1px solid var(--border-subtle); /* Added border for definition */
  font-size: 0.9em;
}

.restrictionDisplay span {
  flex-grow: 1;
  color: var(--text-primary);
}
