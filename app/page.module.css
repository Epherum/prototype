/* ==========================================================================
   1. GLOBAL & PAGE STRUCTURE
   ========================================================================== */

/* :root {
  --spacing-unit: 8px;
  --text-primary: #333;
  --text-secondary: #777;
  --bg-main: #fff;
  --bg-card: #fff;
  --bg-secondary: #f0f0f0;
  --accent-warm: #E89F71;
  --accent-warm-light: #FAEBD7;
  --accent-warm-lighter: #FFF5E8;
  --accent-slider: #FDF5EF;
  --border-subtle: #eee;
  --border-radius-sm: 4px;
  --border-radius-md: 8px;
  --border-radius-lg: 12px;
  --border-radius-pill: 999px;
  --shadow-color: rgba(0, 0, 0, 0.08);
  --overlay-bg: rgba(0, 0, 0, 0.65);
} */

.pageContainer {
  max-width: 600px;
  margin: 0 auto;
  padding: 0 calc(var(--spacing-unit) * 2) calc(var(--spacing-unit) * 3)
    calc(var(--spacing-unit) * 2);
  min-height: 100vh;
  box-sizing: border-box;
  /* If a transform here is causing issues for fixed modals, it needs to be removed or modals need portaling */
  /* Example: transform: translateZ(0); /* This would create a stacking context */
}

.title {
  text-align: center;
  color: var(--text-primary);
  font-size: 1.8em;
  font-weight: 600;
  margin-top: calc(var(--spacing-unit) * 3);
  margin-bottom: calc(var(--spacing-unit) * 3);
}

/* ==========================================================================
   2. STICKY HEADER
   ========================================================================== */

.stickyHeaderContainer {
  position: sticky;
  top: 0;
  z-index: 100; /* Lower than modals */
  background-color: var(--bg-main);
  padding: calc(var(--spacing-unit) * 1.5) calc(var(--spacing-unit) * 2);
  margin: 0 calc(-1 * var(--spacing-unit) * 2); /* Bleed effect */
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.08); /* Slightly softer shadow */
  display: flex;
  flex-direction: column;
  gap: calc(var(--spacing-unit) * 2);
  margin-bottom: calc(var(--spacing-unit) * 3);
}

.dataSourceSelector {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: calc(var(--spacing-unit) * 2);
  flex-shrink: 0;
}

.dataSourceSelector label {
  display: flex;
  align-items: center;
  gap: calc(var(--spacing-unit) * 0.5);
  font-size: 0.9em;
  color: var(--text-secondary);
  cursor: pointer;
}

.dataSourceSelector input[type="radio"] {
  cursor: pointer;
  accent-color: var(--accent-warm);
}

/* Visibility Toggles Swiper (in Sticky Header) */
.visibilitySwiperContainer {
  width: 100%;
  flex-shrink: 0;
  overflow: hidden;
}

.visibilitySwiper {
  padding: 0 calc(var(--spacing-unit) * 0.5); /* Horizontal padding */
}

.visibilitySwiperSlide {
  display: inline-flex !important; /* Swiper specific */
  align-items: center;
  justify-content: center;
  width: auto !important; /* Swiper specific for slidesPerView: 'auto' */
  cursor: grab;
  user-select: none;
  vertical-align: middle;
  padding: 2px 0; /* Minimal vertical padding for the slide wrapper */
}

.visibilitySlideContent {
  display: inline-flex;
  align-items: center;
}

.visibilityButton {
  padding: calc(var(--spacing-unit) * 0.75) calc(var(--spacing-unit) * 1.5);
  font-size: 0.8em;
  font-weight: 500;
  cursor: pointer;
  border: 1px solid var(--accent-warm-light);
  border-radius: var(--border-radius-pill);
  background-color: transparent;
  color: var(--accent-warm);
  transition: background-color 0.2s ease, color 0.2s ease,
    border-color 0.2s ease;
  white-space: nowrap;
  min-width: 75px;
  text-align: center;
  flex-shrink: 0;
}

.visibilityButton.visibilityActive {
  background-color: var(--accent-warm);
  color: var(--bg-card);
  border-color: var(--accent-warm);
  font-weight: 600;
}

.visibilityButton.visibilityInactive {
  border-color: #ddd;
  color: #aaa;
  background-color: #f9f9f9;
}

.visibilityButton:hover:not(.visibilityActive) {
  /* Only apply hover if not active for inactive style */
  border-color: var(--accent-warm);
}
.visibilityButton.visibilityActive:hover {
  background-color: #d68f63; /* Darker accent */
  border-color: #d68f63;
}
.visibilityButton.visibilityInactive:hover {
  border-color: #ccc;
}

.visibilityArrow {
  margin-left: calc(var(--spacing-unit) * 0.75);
  font-size: 1.1em;
  color: var(--text-secondary);
  flex-shrink: 0;
  line-height: 1;
  font-weight: bold;
  /* Opacity handled by motion.div, keep this simple */
}

/* ==========================================================================
   3. MAIN CONTENT SLIDERS AREA
   ========================================================================== */

.slidersArea {
  display: flex;
  flex-direction: column;
  gap: calc(var(--spacing-unit) * 3);
  overflow-anchor: none; /* Prevents scroll jumping during layout changes */
}

.sliderWrapper {
  background-color: var(--bg-card);
  border-radius: var(--border-radius-lg);
  padding: calc(var(--spacing-unit) * 1.5) calc(var(--spacing-unit) * 2);
  box-shadow: 0 4px 15px var(--shadow-color);
  overflow: hidden; /* Important for rounded corners and content clipping */
  border: 1px solid transparent; /* Placeholder for potential focus/active states */
  position: relative; /* For absolute positioning of internal elements if needed */
}

/* ==========================================================================
   4. SLIDER INTERNAL CONTROLS (Edit, Up/Down buttons)
   ========================================================================== */

.controls {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: var(--spacing-unit);
  margin-bottom: calc(var(--spacing-unit) * 1.5);
  padding-bottom: calc(var(--spacing-unit) * 1.5);
  border-bottom: 1px solid var(--border-subtle);
}

.controlButton {
  /* General style for Up/Down buttons */
  padding: calc(var(--spacing-unit) * 0.8) calc(var(--spacing-unit) * 1.2);
  font-size: 0.85em;
  font-weight: 500;
  cursor: pointer;
  background-color: var(--accent-warm-light);
  color: var(--accent-warm);
  border: none;
  border-radius: var(--border-radius-pill);
  transition: background-color 0.2s ease, opacity 0.2s ease, transform 0.1s ease,
    color 0.2s ease;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: calc(var(--spacing-unit) * 0.5);
  line-height: 1;
}
.controlButton:hover {
  background-color: var(--accent-warm);
  color: var(--bg-card);
}
.controlButton:active {
  transform: scale(0.95);
}
.controlButton:disabled {
  opacity: 0.4;
  cursor: not-allowed;
  background-color: #e0e0e0;
  color: var(--text-secondary);
  transform: none;
}

.editButton {
  /* For Options/Edit icon button */
  background-color: rgba(0, 0, 0, 0.05);
  color: var(--text-secondary);
  padding: calc(var(--spacing-unit) * 0.8); /* Make it squarer for icon */
  flex-shrink: 0;
  /* Inherits .controlButton radius if also applied, or set new one */
  border-radius: 50%; /* Example for round icon button */
}
.editButton:hover {
  background-color: rgba(0, 0, 0, 0.1);
  color: var(--text-primary);
}
.editButton svg {
  font-size: 1.2em;
  display: block; /* Helps with icon alignment */
}

.moveButtonGroup {
  display: flex;
  gap: var(--spacing-unit);
  flex-shrink: 0;
}

/* --- .modalButton was identical to .editButton, removed redundancy --- */
/* If .modalButton is used for a different purpose, re-add its specific styles */

/* ==========================================================================
   5. SWIPER INSTANCES (General Styles)
   ========================================================================== */

.sliderTitle {
  /* Title above each Swiper instance */
  margin-top: 0;
  margin-bottom: calc(var(--spacing-unit) * 2);
  font-size: 1.1em;
  color: var(--text-primary);
  font-weight: 600;
  text-align: center;
}

.swiperInstance {
  /* Common class for all main Swipers within sliders */
  --swiper-theme-color: var(--accent-warm); /* For pagination active bullet */
  --swiper-navigation-color: var(--accent-warm); /* For nav arrows */
  --swiper-navigation-size: 18px; /* Default arrow size */

  width: 100%;
  border-radius: var(--border-radius-md);
  overflow: hidden; /* Important for Swiper */
  padding-left: 45px; /* Space for prev nav button */
  padding-right: 45px; /* Space for next nav button */
  position: relative; /* For nav/pagination positioning */
  margin-bottom: var(
    --spacing-unit
  ); /* Space before accordion or next element */
  min-height: 100px; /* Ensure it has some height even if empty */
  box-sizing: border-box;
}

.swiperInstance .swiper-button-next,
.swiperInstance .swiper-button-prev {
  background-color: rgba(255, 255, 255, 0.85);
  border-radius: 50%;
  width: 38px; /* Default width */
  height: 38px; /* Default height */
  top: 50%;
  transform: translateY(-50%);
  box-shadow: 0 3px 8px rgba(100, 80, 70, 0.18);
  transition: background-color 0.2s ease, opacity 0.2s ease,
    box-shadow 0.2s ease;
  z-index: 10; /* Above slides */
  cursor: pointer;
  /* Swiper's default ::after content is used for arrows, these are fine */
}
.swiperInstance .swiper-button-prev {
  left: 8px;
}
.swiperInstance .swiper-button-next {
  right: 8px;
}

.swiperInstance .swiper-button-next:hover,
.swiperInstance .swiper-button-prev:hover {
  background-color: rgba(255, 255, 255, 1);
  box-shadow: 0 4px 10px rgba(100, 80, 70, 0.22);
}
.swiperInstance .swiper-button-disabled {
  opacity: 0.35 !important; /* Swiper uses !important */
  cursor: not-allowed !important;
  pointer-events: none;
}

.swiperInstance .swiper-pagination {
  bottom: 8px !important; /* Swiper specific */
  position: absolute;
  left: 0;
  width: 100%;
  text-align: center;
}
.swiperInstance .swiper-pagination-bullet {
  width: 7px;
  height: 7px;
  background-color: var(--accent-warm-light);
  opacity: 0.6;
  margin: 0 4px !important; /* Swiper specific */
  transition: background-color 0.2s ease, opacity 0.2s ease, width 0.2s ease,
    height 0.2s ease;
  display: inline-block;
  border-radius: 50%;
}
.swiperInstance .swiper-pagination-bullet-active {
  background-color: var(--swiper-theme-color); /* Uses Swiper variable */
  opacity: 1;
  width: 9px;
  height: 9px;
}

/* ==========================================================================
   6. SWIPER SLIDE CONTENT (General Styles)
   ========================================================================== */

.slide {
  /* Common style for a SwiperSlide's content wrapper */
  background-color: var(--accent-slider);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center; /* Default to center content */
  min-height: 150px; /* Ensure slides have a decent height */
  height: 100%; /* Fill Swiper's height */
  border-radius: var(
    --border-radius-md
  ); /* Match .swiperInstance if not transparent */
  padding: calc(var(--spacing-unit) * 1.5) var(--spacing-unit); /* Adjusted padding */
  box-sizing: border-box;
  cursor: grab;
  overflow: hidden;
  text-align: center;
}

.slideTextContent {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: calc(var(--spacing-unit) * 0.5);
  width: 100%;
  box-sizing: border-box;
  /* margin-top: auto; margin-bottom: auto; /* Removed for more explicit control if needed */
}

.slideTextContentWithIcon {
  /* For slides with a leading icon */
  flex-direction: row;
  justify-content: center;
  text-align: left;
}

.slideIcon {
  flex-shrink: 0;
  font-size: 1.4em;
  color: var(--accent-warm);
  margin-right: calc(var(--spacing-unit) * 0.75);
}

.slideName {
  font-weight: 600;
  font-size: 1.1em;
  color: var(--text-primary);
  word-break: break-word; /* Prevent long names from breaking layout */
}

.slideSubText {
  font-size: 0.85em;
  color: var(--text-secondary);
}

/* ==========================================================================
   7. JOURNAL SLIDER SPECIFIC STYLES
   ========================================================================== */

.journalParentHeader {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  margin-bottom: calc(var(--spacing-unit) * 1);
  padding-bottom: calc(var(--spacing-unit) * 1);
  min-height: 30px;
}

.journalParentInfo {
  font-size: 0.9em;
  font-weight: 500;
  color: var(--text-secondary);
  background-color: var(--accent-warm-light);
  padding: calc(var(--spacing-unit) * 0.5) var(--spacing-unit);
  border-radius: var(--border-radius-sm);
  margin-right: auto;
}

/* L2 Scroller (New) */
.level2ScrollerTitle {
  font-size: 0.9em;
  color: var(--text-secondary);
  font-weight: 500;
  text-align: center;
  margin-top: calc(var(--spacing-unit) * 1.5);
  margin-bottom: calc(var(--spacing-unit) * 0.75);
}

.level2ScrollerContainer {
  width: 100%;
  padding: calc(var(--spacing-unit) * 0.5) 0;
  margin-bottom: calc(var(--spacing-unit) * 1.5);
  display: flex;
  justify-content: center;
  align-items: center;
}

.level2ScrollerSwiper {
  /* Specific Swiper for L2 buttons */
  padding: 0 calc(var(--spacing-unit) * 0.5); /* For nav button spacing if active */
  --swiper-navigation-size: 16px;
  --swiper-navigation-color: var(--text-secondary);
  /* No need for main .swiperInstance padding-left/right here */
}

.level2ScrollerSwiper .swiper-button-next,
.level2ScrollerSwiper .swiper-button-prev {
  top: 50%;
  transform: translateY(-50%);
  width: 28px;
  height: 28px;
  background-color: rgba(230, 230, 230, 0.7);
  border-radius: 50%;
  /* z-index from .swiperInstance applies if these are direct children */
}
.level2ScrollerSwiper .swiper-button-next:hover,
.level2ScrollerSwiper .swiper-button-prev:hover {
  background-color: rgba(220, 220, 220, 0.9);
}

.level2ScrollerSlide {
  /* SwiperSlide for L2 buttons */
  width: auto !important;
  display: inline-flex !important;
  align-items: center;
  justify-content: center;
  padding: 2px 0; /* Minimal vertical padding */
}

.level2Button {
  padding: calc(var(--spacing-unit) * 0.65) calc(var(--spacing-unit) * 1.25);
  font-size: 0.8em;
  font-weight: 500;
  cursor: pointer;
  border: 1px solid var(--border-subtle);
  border-radius: var(--border-radius-pill);
  background-color: #f8f8f8;
  color: var(--text-secondary);
  transition: background-color 0.2s ease, color 0.2s ease,
    border-color 0.2s ease;
  white-space: nowrap;
  min-width: 50px;
  text-align: center;
}
.level2Button:hover:not(.level2ButtonActive) {
  border-color: var(--accent-warm-light);
  background-color: #f0f0f0;
}
.level2ButtonActive,
.level2ButtonActive:hover {
  background-color: var(--accent-warm);
  color: var(--bg-card);
  border-color: var(--accent-warm);
  font-weight: 600;
}
.level2ButtonActive:hover {
  background-color: #d68f63;
  border-color: #d68f63;
}

/* Journal L3 Main Swiper (if overrides needed from .swiperInstance) */
.journalL3SwiperInstance {
  /* Example: Maybe different min-height or slide padding */
}

/* Journal L1 Parent Mode Swiper Slide */
.parentModeSlide {
  /* Extends .slide */
  justify-content: center; /* Default for .slide, can be more specific */
  padding-bottom: calc(
    var(--spacing-unit) * 2
  ) !important; /* Ensure space for button */
}
.parentModeSlide .slideTextContent {
  margin-bottom: calc(var(--spacing-unit) * 1.5); /* Space before button */
}
.selectParentButton {
  /* Button within L1 parent mode slide */
  padding: calc(var(--spacing-unit) * 1) calc(var(--spacing-unit) * 2);
  font-size: 0.9em;
  font-weight: 600;
  cursor: pointer;
  background-color: var(--accent-warm);
  color: var(--bg-card);
  border: none;
  border-radius: var(--border-radius-md);
  transition: background-color 0.2s ease, transform 0.1s ease;
  /* margin-top already handled by .slideTextContent margin-bottom */
  display: inline-flex;
  align-items: center;
  gap: calc(var(--spacing-unit) * 0.5);
}
.selectParentButton:hover {
  background-color: #d68f63;
}
.selectParentButton:active {
  transform: scale(0.97);
}

/* Detail text for L3 slides showing L2 parent */
.slideSubTextDetail {
  font-size: 0.75em;
  color: #aaa;
  margin-top: 2px;
}

/* Old Grandchild buttons (commented out as L3s are now main slides) */
/*
.grandchildButtonsContainer { ... }
.grandchildButton { ... }
.grandchildButtonActive { ... }
*/

/* Old Journal Category Scroller (if this was a separate feature, it's now replaced by L2 Scroller) */
/*
.journalCategoryScrollerContainer { ... }
.journalCategoryScroller { ... }
.journalCategorySlide { ... }
.journalCategoryButton { ... }
.journalCategoryButtonActive { ... }
*/

/* Old Journal Header styles (if specific, might be replaced or integrated) */
/*
.journalSliderHeader { ... }
.journalTopLevelTitle { ... }
.level2NavContainer { ... }
.level2NavContainerSingle { ... }
.level2NavButton { ... }
.level2CurrentName { ... }
*/

/* ==========================================================================
   8. ACCORDION STYLES
   ========================================================================== */

.accordionContainer {
  margin-top: calc(var(--spacing-unit) * 2);
  padding-top: calc(var(--spacing-unit) * 1.5);
  border-top: 1px solid var(--border-subtle);
}

.detailsButton {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  background-color: transparent;
  border: none;
  padding: calc(var(--spacing-unit) * 0.5) 0;
  font-size: 0.95em;
  font-weight: 500;
  color: var(--text-primary);
  cursor: pointer;
  text-align: left;
}

.accordionIcon {
  display: inline-block;
  margin-left: var(--spacing-unit);
  font-size: 0.8em;
  transition: transform 0.3s ease;
  color: var(--text-secondary);
}
.accordionIconOpen {
  transform: rotate(180deg);
}

.detailsContentWrapper {
  /* For Framer Motion height animation */
  overflow: hidden;
}

.detailsContent {
  padding: calc(var(--spacing-unit) * 1.5) calc(var(--spacing-unit) * 0.5);
  font-size: 0.85em;
  color: var(--text-secondary);
}
.detailsContent p {
  margin: 0 0 calc(var(--spacing-unit) * 0.75) 0;
  line-height: 1.5;
}
.detailsContent p:last-child {
  margin-bottom: 0;
}
.detailsContent strong {
  color: var(--text-primary);
  margin-right: 4px;
}

/* ==========================================================================
   9. MODAL STYLES (General Overlay & Content)
   ========================================================================== */

.modalOverlay {
  position: fixed;
  inset: 0; /* top: 0; right: 0; bottom: 0; left: 0; */
  background-color: var(--overlay-bg, rgba(0, 0, 0, 0.65));
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000; /* High z-index to be on top */
  padding: var(--spacing-unit);
  box-sizing: border-box;
  overflow-y: auto; /* Allow scrolling if modal content is too tall */
}

.modalContent {
  background-color: var(--bg-card);
  padding: calc(var(--spacing-unit) * 2) calc(var(--spacing-unit) * 2)
    calc(var(--spacing-unit) * 2);
  border-radius: var(--border-radius-lg);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  max-width: 90%;
  width: 450px; /* Default width */
  position: relative; /* Crucial for close button positioning */
  color: var(--text-primary);
  max-height: 85vh; /* Limit height, works with overflow-y on overlay */
  display: flex;
  flex-direction: column;
  margin: auto; /* Helps with centering if overlay uses overflow */
}

.modalContent h2 {
  /* Modal Title */
  margin-top: 0;
  margin-bottom: calc(var(--spacing-unit) * 2);
  padding-bottom: calc(var(--spacing-unit) * 1.5);
  border-bottom: 1px solid var(--border-subtle);
  text-align: center;
  font-size: 1.3em;
  font-weight: 600;
  flex-shrink: 0; /* Prevent title from shrinking if content grows */
}

.modalContent p {
  /* Generic paragraph inside modal */
  font-size: 0.95em;
  color: var(--text-secondary);
  text-align: center;
  margin-bottom: var(--spacing-unit);
}

.modalCloseButton {
  position: absolute;
  top: calc(var(--spacing-unit) * 1);
  right: calc(var(--spacing-unit) * 1.2);
  background: transparent;
  border: none;
  font-size: 1.6em;
  font-weight: bold;
  color: var(--text-secondary);
  cursor: pointer;
  line-height: 1;
  padding: calc(var(--spacing-unit) * 0.5); /* Clickable area */
  border-radius: 50%;
  transition: color 0.2s ease, background-color 0.2s ease;
  z-index: 10; /* Above modal content's other elements */
}
.modalCloseButton:hover {
  color: var(--text-primary);
  background-color: rgba(0, 0, 0, 0.05);
}

.modalActions {
  /* Container for primary/secondary action buttons at modal bottom */
  display: flex;
  justify-content: flex-end;
  gap: var(--spacing-unit);
  margin-top: calc(var(--spacing-unit) * 2); /* Space above actions */
  padding-top: calc(
    var(--spacing-unit) * 2
  ); /* Space below content before actions */
  border-top: 1px solid var(--border-subtle);
  flex-shrink: 0; /* Prevent actions from shrinking */
}

.modalActionButton {
  /* Common style for modal action buttons */
  padding: calc(var(--spacing-unit) * 1) calc(var(--spacing-unit) * 2);
  font-size: 0.9em;
  font-weight: 500;
  border-radius: var(--border-radius-md);
  cursor: pointer;
  border: none;
  display: inline-flex;
  align-items: center;
  gap: calc(var(--spacing-unit) * 0.75);
  transition: background-color 0.2s ease, opacity 0.2s ease;
}
.modalActionButton svg {
  font-size: 1.2em;
}

.modalButtonPrimary {
  background-color: var(--accent-warm);
  color: var(--bg-card);
}
.modalButtonPrimary:hover:not(:disabled) {
  background-color: #d68f63;
}
.modalButtonPrimary:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.modalButtonSecondary {
  background-color: var(--bg-secondary);
  color: var(--text-secondary);
  border: 1px solid var(--border-subtle);
}
.modalButtonSecondary:hover {
  background-color: #f0f0f0;
  border-color: #ccc;
}

/* For action buttons at the top of a modal, if any */
.modalTopActions {
  display: flex;
  justify-content: center; /* Or flex-end, etc. */
  gap: var(--spacing-unit);
  margin-bottom: calc(var(--spacing-unit) * 1.5);
  flex-shrink: 0;
}

/* ==========================================================================
   10. JOURNAL MODAL SPECIFICS (Account Hierarchy Tree)
   ========================================================================== */

.accountHierarchyContainer {
  /* Scrollable area for the tree */
  overflow-y: auto;
  flex-grow: 1; /* Takes available vertical space */
  margin-bottom: calc(var(--spacing-unit) * 2); /* Space before modal actions */
  /* Optional: padding/border if desired for the container itself */
  /* padding: var(--spacing-unit); */
  /* border: 1px solid var(--border-subtle); */
  /* border-radius: var(--border-radius-sm); */
}

.accountNodeRow {
  display: flex;
  align-items: center;
  justify-content: space-between; /* Pushes actions to the right */
  padding: calc(var(--spacing-unit) * 0.75) calc(var(--spacing-unit) * 0.5); /* Adjusted padding */
  border-radius: var(--border-radius-sm);
  transition: background-color 0.15s ease;
  cursor: pointer;
  margin-bottom: 2px; /* Small gap between rows */
  position: relative; /* For ::before pseudo-elements if used for lines */
}
.accountNodeRow:hover {
  background-color: rgba(0, 0, 0, 0.03);
}
.accountNodeRow.accountNodeSelected {
  background-color: var(--accent-warm-lighter);
}

.accountNodeToggle {
  /* Chevron icon for expanding/collapsing */
  /* margin-right: calc(var(--spacing-unit) * 0.75); Original was negative, let's try positive with flex order */
  color: var(--text-secondary);
  line-height: 1;
  flex-shrink: 0;
  width: 20px; /* Clickable area for toggle */
  height: 20px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  /* order: 1; /* If using flex order */
}
.accountNodeToggle svg {
  width: 16px;
  height: 16px;
}

.accountNodeIconPlaceholder {
  /* For alignment when no children */
  display: inline-block;
  width: 20px; /* Match .accountNodeToggle width */
  flex-shrink: 0;
  /* order: 1; */
}

.accountNodeCode {
  font-weight: 500;
  color: var(--text-secondary);
  margin-left: calc(
    var(--spacing-unit) * 0.5
  ); /* Space after toggle/placeholder */
  margin-right: calc(var(--spacing-unit) * -5);
  min-width: 45px;
  flex-shrink: 0;
  font-size: 0.85em;
  text-align: right;
  /* order: 2; */
}
.accountNodeSelected .accountNodeCode {
  color: var(--accent-warm);
}

.accountNodeName {
  font-size: 0.9em;
  color: var(--text-primary);
  flex-grow: 1; /* Takes up remaining space */
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: var(--spacing-unit); /* Space before action buttons */
  /* order: 3; */
}
.accountNodeSelected .accountNodeName {
  font-weight: 600;
}

.accountNodeActions {
  /* Container for Add/Delete icons in tree row */
  display: flex;
  align-items: center;
  gap: calc(var(--spacing-unit) * 0.5);
  flex-shrink: 0;
  /* order: 4; */
}

.accountNodeActionButton {
  /* Common style for Add/Delete icons */
  background: transparent;
  border: none;
  cursor: pointer;
  padding: calc(var(--spacing-unit) * 0.5);
  font-size: 1.1em;
  line-height: 1;
  border-radius: 50%;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.15s ease, color 0.15s ease;
}
.accountNodeActionButton:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

.accountNodeAddChildButton {
  /* Specific Add icon style */
  color: var(--accent-warm);
}
.accountNodeAddChildButton:hover {
  color: #c77a50; /* Darker accent */
  background-color: var(--accent-warm-light);
}

.accountNodeDeleteButton {
  /* Specific Delete icon style */
  color: #cc0000;
}
.accountNodeDeleteButton:hover {
  color: #a30000;
  background-color: rgba(255, 0, 0, 0.1);
}

.accountNodeChildrenContainer {
  /* Wrapper for children nodes when expanded */
  position: relative;
}
.accountNodeChildrenMotionWrapper {
  /* For Framer Motion, applies padding for indent */
  /* padding-left handled by inline style in component based on level */
  position: relative; /* For pseudo-element line */
}
.accountNodeChildrenMotionWrapper::before {
  /* Vertical connector line */
  content: "";
  position: absolute;
  left: 10px; /* Adjust to align with center of parent's toggle icon */
  top: 0;
  bottom: 0;
  width: 1px;
  background-color: var(--border-subtle);
  /* Optional dashed line effect */
  /* background-image: linear-gradient(to bottom, var(--border-subtle) 50%, transparent 50%); */
  /* background-size: 1px 6px; */
}

/* ==========================================================================
   11. ADD JOURNAL MODAL SPECIFICS (Form Styles)
   ========================================================================== */

.addJournalForm {
  display: flex;
  flex-direction: column;
  gap: calc(var(--spacing-unit) * 1.5);
  margin-top: calc(var(--spacing-unit) * 1.5); /* Space after modal title */
  flex-grow: 1; /* Allows form to take space if modal content area is scrollable */
  overflow-y: auto; /* If form itself becomes too long */
  padding-bottom: var(--spacing-unit); /* Padding at bottom of form */
}

.formGroup {
  display: flex;
  flex-direction: column;
  gap: calc(var(--spacing-unit) * 0.5);
}

.formGroup label {
  font-size: 0.9em;
  font-weight: 500;
  color: var(--text-secondary);
}

.formGroup input[type="text"] {
  padding: calc(var(--spacing-unit) * 1);
  border: 1px solid var(--border-subtle);
  border-radius: var(--border-radius-sm);
  font-size: 1em;
  color: var(--text-primary);
  background-color: #fff; /* Or var(--bg-main) if it's distinct */
}
.formGroup input[type="text"]:focus {
  outline: none;
  border-color: var(--accent-warm);
  box-shadow: 0 0 0 2px var(--accent-warm-light);
}

.formError {
  color: #d8000c;
  background-color: #ffd2d2;
  border: 1px solid #d8000c;
  padding: var(--spacing-unit);
  border-radius: var(--border-radius-sm);
  font-size: 0.85em;
  text-align: center;
  margin-bottom: var(--spacing-unit); /* Space below error */
}

/* .addJournalForm .modalActions: Already covered by general .modalActions */

/* ==========================================================================
   12. UTILITY / HELPER STYLES
   ========================================================================== */

.noData {
  /* For empty Swiper instances */
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100px;
  color: var(--text-secondary);
  background-color: #f7f7f7;
  border: 1px dashed var(--border-subtle);
  border-radius: var(--border-radius-md);
  font-size: 0.9em;
  padding: calc(var(--spacing-unit) * 2);
  box-sizing: border-box;
  margin: var(--spacing-unit) 0; /* Consistent margin */
}

.noDataSmall {
  /* For smaller empty states, like L2 scroller */
  text-align: center;
  font-size: 0.85em;
  color: var(--text-secondary);
  padding: var(--spacing-unit) 0;
  font-style: italic;
}

.inputHint {
  /* Hint text below form inputs */
  font-size: 0.8em;
  color: var(--text-secondary);
  margin-top: calc(var(--spacing-unit) * 0.25);
}

/* page.module.css (add these new styles) */

.l2ButtonWrapper {
  position: relative; /* For positioning nav options */
  display: inline-block; /* Or flex, depending on desired layout with button */
}

.l2ButtonShaking {
  animation: shake 0.5s cubic-bezier(0.36, 0.07, 0.19, 0.97) both infinite;
  /* You might want to apply shaking only while options are visible */
}

@keyframes shake {
  10%,
  90% {
    transform: translate3d(-1px, 0, 0) scale(1.02);
  }
  20%,
  80% {
    transform: translate3d(2px, 0, 0) scale(1.02);
  }
  30%,
  50%,
  70% {
    transform: translate3d(-3px, 0, 0) scale(1.02);
  }
  40%,
  60% {
    transform: translate3d(3px, 0, 0) scale(1.02);
  }
}

.navOptionsOverlay {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); /* Center on the button */
  display: flex;
  flex-direction: column; /* Stack Go Up and Go Down */
  align-items: center;
  gap: calc(var(--spacing-unit) * 2); /* More space between up/down */
  z-index: 20; /* Above the button itself */
  padding: var(--spacing-unit);
  /* background-color: rgba(255, 255, 255, 0.95); Optional: semi-transparent bg for options container */
  /* border-radius: var(--border-radius-md); */
  /* box-shadow: 0 2px 10px rgba(0,0,0,0.2); */
  width: auto; /* Fit content */
  pointer-events: auto; /* Allow clicks on options */
}

.navOptionButton {
  background-color: var(--bg-card);
  color: var(--text-primary);
  border: 1px solid var(--border-subtle);
  border-radius: var(--border-radius-sm);
  padding: calc(var(--spacing-unit) * 0.75) calc(var(--spacing-unit) * 1.5);
  font-size: 0.75em;
  font-weight: 500;
  cursor: pointer;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  transition: background-color 0.2s, transform 0.1s;
  display: flex;
  align-items: center;
  gap: calc(var(--spacing-unit) * 0.5);
  white-space: nowrap;
}
.navOptionButton:hover {
  background-color: #f0f0f0;
}
.navOptionButton:active {
  transform: scale(0.95);
}

.navOptionGoUp {
  position: absolute; /* Position relative to .l2ButtonWrapper */
  bottom: calc(100% + var(--spacing-unit) * 0.5); /* Above the button */
  left: 50%;
  transform: translateX(-50%);
}

.navOptionGoDown {
  position: absolute; /* Position relative to .l2ButtonWrapper */
  top: calc(100% + var(--spacing-unit) * 0.5); /* Below the button */
  left: 50%;
  transform: translateX(-50%);
}

.navIcon {
  font-size: 0.9em;
}

.navOptionDismiss {
  /* Small dismiss button, optional */
  position: absolute;
  top: -12px; /* Adjust for best placement */
  right: -12px;
  background: rgba(0, 0, 0, 0.6);
  color: white;
  border: none;
  border-radius: 50%;
  width: 20px;
  height: 20px;
  font-size: 12px;
  line-height: 20px;
  text-align: center;
  cursor: pointer;
  z-index: 21;
}
.navOptionDismiss:hover {
  background: rgba(0, 0, 0, 0.8);
}

.navOptionsBackdrop {
  /* Full-screen backdrop to click-away */
  position: fixed;
  inset: 0;
  background-color: transparent; /* Invisible */
  z-index: 19; /* Below options overlay, above other content */
}

/* page.module.css */

/* Change previous .level2ScrollerSlide to prevent overflow issues from other attempts */
.level2ScrollerSlideNoOverflow {
  /* NEW or rename previous .level2ScrollerSlide */
  width: auto !important;
  display: inline-flex !important;
  align-items: center;
  justify-content: center;
  padding: calc(
    var(--spacing-unit) * 0.5
  ); /* Give some space around the interactive wrapper */
  /* overflow: hidden; /* This slide should now clip its content if wrapper scales */
}

.l2ButtonInteractiveWrapper {
  position: relative; /* For containing absolutely positioned dismiss button if needed */
  display: flex; /* Helps with centering button or expanded content */
  align-items: center;
  justify-content: center;
  transition: transform 0.2s ease-out, min-width 0.2s ease-out,
    padding 0.2s ease-out;
  /* Normal state width should be determined by .level2Button */
}

.level2Button {
  /* Existing button style - ensure it defines a base size */
  padding: calc(var(--spacing-unit) * 0.65) calc(var(--spacing-unit) * 1.25);
  font-size: 0.8em;
  /* ... other existing styles for .level2Button ... */
  position: relative; /* So its content is above any potential background */
  z-index: 5;
  box-sizing: border-box;
}

/* Active state when options are shown - button scales and changes appearance */
.l2ButtonWithOptionsActive {
  transform: scale(1.1); /* Slightly larger */
  /* min-width: 150px; /* Expanded width to hold options */
  /* padding: var(--spacing-unit); /* Adjust padding for expanded view */
  /* background-color: var(--bg-card); /* Change background */
  /* border: 1px solid var(--accent-warm); */
  /* box-shadow: 0 4px 12px rgba(0,0,0,0.15); */
  border-radius: var(--border-radius-md); /* Can make it more card-like */
  z-index: 10; /* Bring to front */
}

.l2ButtonExpandedWithOptions {
  display: flex;
  flex-direction: column;
  align-items: stretch; /* Make children take full width */
  justify-content: space-between;
  width: 180px; /* Fixed expanded width, adjust as needed */
  min-height: 90px; /* Fixed expanded height */
  padding: var(--spacing-unit);
  background-color: var(--bg-card);
  border: 1px solid var(--accent-warm);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  border-radius: var(--border-radius-md);
  box-sizing: border-box;
  cursor: default; /* No more button cursor for the wrapper */
}

.expandedButtonHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 0.8em;
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: calc(var(--spacing-unit) * 1);
  padding-bottom: calc(var(--spacing-unit) * 0.5);
  border-bottom: 1px solid var(--border-subtle);
  flex-shrink: 0;
}
.expandedButtonHeader span {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.navOptionDismissInside {
  background: transparent;
  border: none;
  color: var(--text-secondary);
  font-size: 1.2em;
  font-weight: bold;
  cursor: pointer;
  padding: 0 var(--spacing-unit) 0 0; /* Minimal padding */
  line-height: 1;
}
.navOptionDismissInside:hover {
  color: var(--text-primary);
}

.navOptionsInside {
  display: flex;
  flex-direction: column; /* Stack options vertically */
  gap: calc(var(--spacing-unit) * 0.75);
  flex-grow: 1;
  justify-content: center; /* Center options vertically */
}

.navOptionButtonInside {
  background-color: var(--bg-secondary);
  color: var(--text-primary);
  border: 1px solid var(--border-subtle);
  border-radius: var(--border-radius-sm);
  padding: calc(var(--spacing-unit) * 0.75) var(--spacing-unit);
  font-size: 0.75em;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.2s;
  display: flex;
  align-items: center;
  justify-content: center; /* Center text and icon */
  gap: calc(var(--spacing-unit) * 0.5);
  text-align: center;
}
.navOptionButtonInside:hover {
  background-color: #e0e0e0;
  border-color: #ccc;
}
.navOptionButtonInside .navIcon {
  font-size: 0.9em;
}

/* Remove old .navOptionsOverlay, .navOptionGoUp, .navOptionGoDown (external ones) */
/* Also remove .l2ButtonShaking if not desired, or apply it to .l2ButtonWithOptionsActive */
/* Remove .navOptionsBackdrop */

/* Ensure Swiper slides DO NOT allow overflow if the button itself is scaling and containing everything */
/* .level2ScrollerSlide {
  overflow: hidden !important; /* Revert if it was visible before */
/* } */
/* Actually, for scaling to work visually without clipping by other slides immediately,
   the slide itself might still need overflow:visible, but its direct content wrapper for the
   button interaction should manage its own boundaries carefully.
   Let's keep .level2ScrollerSlideNoOverflow without explicit overflow, let Swiper manage.
   The .l2ButtonInteractiveWrapper will be the one scaling.
*/

/* page.module.css */

.level2ScrollerSlideNoOverflow {
  width: auto !important;
  display: inline-flex !important;
  align-items: center;
  justify-content: center;
  padding: calc(var(--spacing-unit) * 0.5);
  /* overflow: visible; /* If scaling makes it go outside slide bounds and look good */
}

.l2ButtonInteractiveWrapper {
  position: relative;
  display: flex; /* Changed to flex to better manage content switching */
  align-items: center;
  justify-content: center;
  /* Transition for properties NOT handled by Framer's `animate` prop, if any */
  /* Framer's `animate` on scale/width/height is usually sufficient */
  /* min-width and padding will be animated by variants if included there */
  border-radius: var(--border-radius-pill); /* Base radius for normal button */
  /* Add outline for debugging wrapper bounds */
  /* outline: 1px dashed blue; */
}

/* .l2ButtonWithOptionsActive class is now primarily for Framer Motion's `animate="expanded"` target */
/* Styles previously in .l2ButtonWithOptionsActive like box-shadow, border can be part of the 'expanded' variant or .l2ButtonExpandedWithOptions */

.level2Button {
  /* Normal button style */
  /* ... existing styles ... */
  /* Ensure it has a defined size or relies on padding for its size */
  min-width: 50px; /* Or whatever your normal button width is */
  box-sizing: border-box;
  /* No transform here, Framer Motion handles it on the wrapper */
}

.l2ButtonExpandedWithOptions {
  /* This div now represents the content of the expanded state */
  display: flex;
  flex-direction: column;
  align-items: stretch;
  justify-content: space-between;
  width: 180px; /* Desired expanded width */
  min-height: 90px; /* Desired expanded height */
  padding: var(--spacing-unit);
  background-color: var(--bg-card);
  border: 1px solid var(--accent-warm);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  border-radius: var(--border-radius-md); /* Radius for the expanded card */
  box-sizing: border-box;
  cursor: default;
  /* Opacity and scale handled by Framer Motion on this div */
}

.expandedButtonHeader {
  /* Styles remain the same */
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 0.8em;
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: calc(var(--spacing-unit) * 1);
  padding-bottom: calc(var(--spacing-unit) * 0.5);
  border-bottom: 1px solid var(--border-subtle);
  flex-shrink: 0;
}
.expandedButtonHeader span {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  margin-right: var(--spacing-unit); /* Space before dismiss button */
}

.navOptionDismissInside {
  /* Styles remain the same */
  background: transparent;
  border: none;
  color: var(--text-secondary);
  font-size: 1.2em;
  font-weight: bold;
  cursor: pointer;
  padding: 0;
  line-height: 1;
  flex-shrink: 0;
}
.navOptionDismissInside:hover {
  color: var(--text-primary);
}

.navOptionsInside {
  /* Styles remain the same */
  display: flex;
  flex-direction: column;
  gap: calc(var(--spacing-unit) * 0.75);
  flex-grow: 1;
  justify-content: center;
}

.navOptionButtonInside {
  /* Styles remain the same */
  background-color: var(--bg-secondary);
  color: var(--text-primary);
  border: 1px solid var(--border-subtle);
  border-radius: var(--border-radius-sm);
  padding: calc(var(--spacing-unit) * 0.75) var(--spacing-unit);
  font-size: 0.75em;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.2s;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: calc(var(--spacing-unit) * 0.5);
  text-align: center;
}
.navOptionButtonInside:hover {
  background-color: #e0e0e0;
  border-color: #ccc;
}
.navOptionButtonInside .navIcon {
  font-size: 0.9em;
}

/* page.module.css */

/* Style for the L1 context header when its nav options are active */
.journalParentHeader {
  /* Make sure it has position: relative if not already for options overlay */
  position: relative;
  /* Add cursor: pointer if entire area is long-pressable and not just text */
  /* cursor: pointer; */
  /* transition for any visual feedback on long-press activation */
  transition: background-color 0.2s ease;
}
.journalParentHeader.l1NavActive {
  /* Example style when L1 nav is active */
  background-color: var(--accent-warm-lighter); /* Subtle highlight */
}

.l1NavOptionsOverlay {
  position: absolute;
  bottom: calc(100% + var(--spacing-unit)); /* Position above the header */
  left: 50%;
  transform: translateX(-50%);
  background-color: var(--bg-card);
  padding: var(--spacing-unit);
  border-radius: var(--border-radius-md);
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
  z-index: 30; /* Ensure it's above the header content */
  display: flex; /* For layout of button and dismiss */
  align-items: center;
  gap: var(--spacing-unit);
}

/* Reuse .navOptionButtonInside and .navIcon from L2 options if style is the same */
/* .navOptionButtonInside { ... } */
/* .navIcon { ... } */

.navOptionDismissInsideL1 {
  /* Specific dismiss for L1 if needed */
  background: transparent;
  border: none;
  color: var(--text-secondary);
  font-size: 1.2em; /* Make it a bit larger or distinct */
  cursor: pointer;
  padding: calc(var(--spacing-unit) * 0.25);
  line-height: 1;
}
.navOptionDismissInsideL1:hover {
  color: var(--text-primary);
}

/* page.module.css */

.journalParentInfo, /* The span holding the L1 context text */
.level2Button {
  /* Your L2 buttons */
  /* Standard CSS to prevent text selection */
  -webkit-user-select: none; /* Safari */
  -moz-user-select: none; /* Firefox */
  -ms-user-select: none; /* Internet Explorer/Edge */
  user-select: none; /* Non-prefixed version, currently supported by Chrome, Opera, Edge */

  /* For iOS Safari, to prevent callout menu on long press (copy, share, etc.) */
  -webkit-touch-callout: none;
}

/* Apply to the interactive wrappers as well if the issue persists */
.journalParentHeader, /* The clickable L1 context header div */
.l2ButtonInteractiveWrapper {
  /* The wrapper around L2 buttons */
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-touch-callout: none;
}

/* If your L1 options overlay contains text you don't want selectable during interaction */
.l1NavOptionsOverlay {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-touch-callout: none;
}

/* If your L2 expanded options view contains text you don't want selectable */
.l2ButtonExpandedWithOptions {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-touch-callout: none;
}

/* page.module.css */

/* --- Account Node Styles (in JournalModal) --- */
.accountNodeRow {
  display: flex;
  align-items: center;
  /* padding-top and padding-bottom define row height, keep them reasonable */
  padding-top: calc(var(--spacing-unit) * 0.75);
  padding-bottom: calc(var(--spacing-unit) * 0.75);
  /* padding-right for space before end of row, can be small */
  padding-right: calc(var(--spacing-unit) * 0.5);
  /* padding-left is now controlled by inline style: level * indentSize */
  border-radius: var(--border-radius-sm);
  transition: background-color 0.15s ease;
  cursor: pointer;
  margin-bottom: 1px; /* Minimal space between rows */
  position: relative;
}
/* ... .accountNodeRow:hover, .accountNodeRow.accountNodeSelected ... */

.accountNodeToggle {
  /* Chevron icon container */
  flex-shrink: 0; /* Prevent shrinking */
  width: 20px; /* Adjust if your icons are smaller/larger. Was 16px icon in 16px box, or 20px box. */
  height: 20px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  color: var(--text-secondary);
  margin-right: calc(
    var(--spacing-unit) * 0.5
  ); /* MODIFIED: Reduced space after chevron */
  /* The negative margin used previously was: margin-right: calc(var(--spacing-unit) * -2.7); 
     This was likely to pull the code/name leftwards. We achieve that now by reducing indent 
     and margins on other elements. Let's avoid large negative margins if possible.
  */
}
.accountNodeToggle svg {
  width: 16px; /* Actual icon size */
  height: 16px;
}

.accountNodeIconPlaceholder {
  /* For alignment when no children */
  flex-shrink: 0;
  width: 20px; /* Match .accountNodeToggle width */
  height: 20px; /* Match .accountNodeToggle height */
  margin-right: calc(
    var(--spacing-unit) * 0.5
  ); /* MODIFIED: Match .accountNodeToggle margin */
}

.accountNodeCode {
  flex-shrink: 0; /* Prevent shrinking */
  font-weight: 500;
  color: var(--text-secondary);
  font-size: 0.8em; /* MODIFIED: Slightly smaller font for code */
  margin-right: calc(
    var(--spacing-unit) * -1
  ); /* MODIFIED: Reduced space after code */
  text-align: left; /* If codes are short, left align might look better than right */
}
.accountNodeSelected .accountNodeCode {
  color: var(--accent-warm);
}

.journalParentHeader {
  /* ... existing styles (position: relative, transition, etc.) ... */
  cursor: pointer; /* If the whole area is double-clickable */
  touch-action: manipulation; /* Prevent double-tap zoom */
  /* user-select: none etc. are already there for text selection prevention */
}

.level2Button {
  /* ... existing styles ... */
  touch-action: manipulation; /* Prevent double-tap zoom */
}

/* OR, if the wrapper receives the event more reliably due to structure: */
.l2ButtonInteractiveWrapper {
  /* ... existing styles ... */
  touch-action: manipulation; /* Prevent double-tap zoom */
}

.accountNodeRow {
  /* ... existing styles ... */
  touch-action: manipulation; /* If double-clicking these rows triggers actions */
}
